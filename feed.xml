<?xml version="1.0" encoding="utf-8"?><feed xmlns="http://www.w3.org/2005/Atom" xml:lang="en"><generator uri="https://jekyllrb.com/" version="4.3.4">Jekyll</generator><link href="https://xinwuchn.github.io/feed.xml" rel="self" type="application/atom+xml"/><link href="https://xinwuchn.github.io/" rel="alternate" type="text/html" hreflang="en"/><updated>2025-10-27T07:09:32+00:00</updated><id>https://xinwuchn.github.io/feed.xml</id><title type="html">blank</title><subtitle>A simple, whitespace theme for academics. Based on [*folio](https://github.com/bogoli/-folio) design. </subtitle><entry><title type="html">Some attractive color schemes for academic papers</title><link href="https://xinwuchn.github.io/blog/2025/Colormap/" rel="alternate" type="text/html" title="Some attractive color schemes for academic papers"/><published>2025-07-08T00:00:00+00:00</published><updated>2025-07-08T00:00:00+00:00</updated><id>https://xinwuchn.github.io/blog/2025/Colormap</id><content type="html" xml:base="https://xinwuchn.github.io/blog/2025/Colormap/"><![CDATA[<h3 id="case-1">Case 1</h3> <p>From the <a href="https://doi.org/10.1038/s41563-025-02128-7">Nat. Mater.</a> paper.</p> <swiper-container keyboard="true" navigation="true" pagination="true" pagination-clickable="true" pagination-dynamic-bullets="true" rewind="true"> <swiper-slide> <a class="spotlight" href="/assets/img/Color_1/1.jpg"> <figure> <picture> <source class="responsive-img-srcset" srcset="/assets/img/Color_1/1-480.webp 480w,/assets/img/Color_1/1-800.webp 800w,/assets/img/Color_1/1-1400.webp 1400w," sizes="95vw" type="image/webp"/> <img src="/assets/img/Color_1/1.jpg" class="img-fluid rounded z-depth-0" width="100%" height="auto" loading="eager" onerror="this.onerror=null; $('.responsive-img-srcset').remove();"/> </picture> </figure> </a> </swiper-slide> <swiper-slide> <a class="spotlight" href="/assets/img/Color_1/2.jpg"> <figure> <picture> <source class="responsive-img-srcset" srcset="/assets/img/Color_1/2-480.webp 480w,/assets/img/Color_1/2-800.webp 800w,/assets/img/Color_1/2-1400.webp 1400w," sizes="95vw" type="image/webp"/> <img src="/assets/img/Color_1/2.jpg" class="img-fluid rounded z-depth-0" width="100%" height="auto" loading="eager" onerror="this.onerror=null; $('.responsive-img-srcset').remove();"/> </picture> </figure> </a> </swiper-slide> <swiper-slide> <a class="spotlight" href="/assets/img/Color_1/3.jpg"> <figure> <picture> <source class="responsive-img-srcset" srcset="/assets/img/Color_1/3-480.webp 480w,/assets/img/Color_1/3-800.webp 800w,/assets/img/Color_1/3-1400.webp 1400w," sizes="95vw" type="image/webp"/> <img src="/assets/img/Color_1/3.jpg" class="img-fluid rounded z-depth-0" width="100%" height="auto" loading="eager" onerror="this.onerror=null; $('.responsive-img-srcset').remove();"/> </picture> </figure> </a> </swiper-slide> <swiper-slide> <a class="spotlight" href="/assets/img/Color_1/4.jpg"> <figure> <picture> <source class="responsive-img-srcset" srcset="/assets/img/Color_1/4-480.webp 480w,/assets/img/Color_1/4-800.webp 800w,/assets/img/Color_1/4-1400.webp 1400w," sizes="95vw" type="image/webp"/> <img src="/assets/img/Color_1/4.jpg" class="img-fluid rounded z-depth-0" width="100%" height="auto" loading="eager" onerror="this.onerror=null; $('.responsive-img-srcset').remove();"/> </picture> </figure> </a> </swiper-slide> <swiper-slide> <a class="spotlight" href="/assets/img/Color_1/5.jpg"> <figure> <picture> <source class="responsive-img-srcset" srcset="/assets/img/Color_1/5-480.webp 480w,/assets/img/Color_1/5-800.webp 800w,/assets/img/Color_1/5-1400.webp 1400w," sizes="95vw" type="image/webp"/> <img src="/assets/img/Color_1/5.jpg" class="img-fluid rounded z-depth-0" width="100%" height="auto" loading="eager" onerror="this.onerror=null; $('.responsive-img-srcset').remove();"/> </picture> </figure> </a> </swiper-slide> </swiper-container> <hr/> <h3 id="case-2">Case 2</h3> <p>From the <a href="https://pubs.acs.org/doi/10.1021/jacs.5c08642">JACS</a> paper.</p> <swiper-container keyboard="true" navigation="true" pagination="true" pagination-clickable="true" pagination-dynamic-bullets="true" rewind="true"> <swiper-slide> <a class="spotlight" href="/assets/img/Color_2/1.jpg"> <figure> <picture> <source class="responsive-img-srcset" srcset="/assets/img/Color_2/1-480.webp 480w,/assets/img/Color_2/1-800.webp 800w,/assets/img/Color_2/1-1400.webp 1400w," sizes="95vw" type="image/webp"/> <img src="/assets/img/Color_2/1.jpg" class="img-fluid rounded z-depth-0" width="100%" height="auto" loading="eager" onerror="this.onerror=null; $('.responsive-img-srcset').remove();"/> </picture> </figure> </a> </swiper-slide> </swiper-container> <hr/> <h3 id="case-3">Case 3</h3> <p>From the <a href="https://advanced.onlinelibrary.wiley.com/doi/10.1002/adma.202514029?af=R">Adv. Mater.</a> paper.</p> <swiper-container keyboard="true" navigation="true" pagination="true" pagination-clickable="true" pagination-dynamic-bullets="true" rewind="true"> <swiper-slide> <a class="spotlight" href="/assets/img/Color_3/1.jpg"> <figure> <picture> <source class="responsive-img-srcset" srcset="/assets/img/Color_3/1-480.webp 480w,/assets/img/Color_3/1-800.webp 800w,/assets/img/Color_3/1-1400.webp 1400w," sizes="95vw" type="image/webp"/> <img src="/assets/img/Color_3/1.jpg" class="img-fluid rounded z-depth-0" width="100%" height="auto" loading="eager" onerror="this.onerror=null; $('.responsive-img-srcset').remove();"/> </picture> </figure> </a> </swiper-slide> <swiper-slide> <a class="spotlight" href="/assets/img/Color_3/2.jpg"> <figure> <picture> <source class="responsive-img-srcset" srcset="/assets/img/Color_3/2-480.webp 480w,/assets/img/Color_3/2-800.webp 800w,/assets/img/Color_3/2-1400.webp 1400w," sizes="95vw" type="image/webp"/> <img src="/assets/img/Color_3/2.jpg" class="img-fluid rounded z-depth-0" width="100%" height="auto" loading="eager" onerror="this.onerror=null; $('.responsive-img-srcset').remove();"/> </picture> </figure> </a> </swiper-slide> <swiper-slide> <a class="spotlight" href="/assets/img/Color_3/3.jpg"> <figure> <picture> <source class="responsive-img-srcset" srcset="/assets/img/Color_3/3-480.webp 480w,/assets/img/Color_3/3-800.webp 800w,/assets/img/Color_3/3-1400.webp 1400w," sizes="95vw" type="image/webp"/> <img src="/assets/img/Color_3/3.jpg" class="img-fluid rounded z-depth-0" width="100%" height="auto" loading="eager" onerror="this.onerror=null; $('.responsive-img-srcset').remove();"/> </picture> </figure> </a> </swiper-slide> <swiper-slide> <a class="spotlight" href="/assets/img/Color_3/4.jpg"> <figure> <picture> <source class="responsive-img-srcset" srcset="/assets/img/Color_3/4-480.webp 480w,/assets/img/Color_3/4-800.webp 800w,/assets/img/Color_3/4-1400.webp 1400w," sizes="95vw" type="image/webp"/> <img src="/assets/img/Color_3/4.jpg" class="img-fluid rounded z-depth-0" width="100%" height="auto" loading="eager" onerror="this.onerror=null; $('.responsive-img-srcset').remove();"/> </picture> </figure> </a> </swiper-slide> <swiper-slide> <a class="spotlight" href="/assets/img/Color_3/5.jpg"> <figure> <picture> <source class="responsive-img-srcset" srcset="/assets/img/Color_3/5-480.webp 480w,/assets/img/Color_3/5-800.webp 800w,/assets/img/Color_3/5-1400.webp 1400w," sizes="95vw" type="image/webp"/> <img src="/assets/img/Color_3/5.jpg" class="img-fluid rounded z-depth-0" width="100%" height="auto" loading="eager" onerror="this.onerror=null; $('.responsive-img-srcset').remove();"/> </picture> </figure> </a> </swiper-slide> <swiper-slide> <a class="spotlight" href="/assets/img/Color_3/6.jpg"> <figure> <picture> <source class="responsive-img-srcset" srcset="/assets/img/Color_3/6-480.webp 480w,/assets/img/Color_3/6-800.webp 800w,/assets/img/Color_3/6-1400.webp 1400w," sizes="95vw" type="image/webp"/> <img src="/assets/img/Color_3/6.jpg" class="img-fluid rounded z-depth-0" width="100%" height="auto" loading="eager" onerror="this.onerror=null; $('.responsive-img-srcset').remove();"/> </picture> </figure> </a> </swiper-slide> </swiper-container>]]></content><author><name></name></author><category term="Research"/><category term="Research"/><summary type="html"><![CDATA[You can find some excellent color schemes for research paper layouts from here.]]></summary></entry><entry><title type="html">Calculate phonon spectra by DFT</title><link href="https://xinwuchn.github.io/blog/2024/DFT-PhononSpectrum/" rel="alternate" type="text/html" title="Calculate phonon spectra by DFT"/><published>2024-12-08T00:00:00+00:00</published><updated>2024-12-08T00:00:00+00:00</updated><id>https://xinwuchn.github.io/blog/2024/DFT-PhononSpectrum</id><content type="html" xml:base="https://xinwuchn.github.io/blog/2024/DFT-PhononSpectrum/"><![CDATA[<p>Phonons are quasiparticles representing the collective excitations of a crystal structure, describing the quantized modes of lattice vibrations that follow Bose-Einstein statistics. They are closely related to the thermodynamic properties of crystals. Therefore, calculating the phonon dispersion relations, or phonon spectra, is of great significance. This process involves obtaining the necessary force constants from first-principles (FP) calculations, followed by further processing and computations using tools like Phonopy. Two common FP methods for this purpose are the <strong>finite displacement method (FDM)</strong> and <strong>density functional perturbation theory (DFPT)</strong>.</p> <pre><code class="language-mermaid">flowchart LR
A(Structure optimization) --&gt; B(Supercell)
B --&gt; D[FDM by VASP]
B --&gt; E[DFPT by VASP]
D --&gt; F[Force constants]
E --&gt; F[Force constants]
F --&gt; G[Phonon spectra]
</code></pre> <p>Here I’m gonna use monolayer molybdenum disulfide (MoS₂) as an example to elaborate on the process:</p> <hr/> <h4 id="1-structure-optimization">1. Structure optimization</h4> <p>Perform high-precision structure optimization of the initial unit cell, which can be from some tools like <a href="https://wiki.fysik.dtu.dk/ase/">ASE</a> , optimizing both <strong>lattice constants</strong> and <strong>atomic positions</strong>.</p> <ul id="incar-structure-optimization" class="tab" data-tab="7b3045d6-40a3-4b94-8c96-71f9746f22b6" data-name="incar-structure-optimization"> <li class="active" id="incar-structure-optimization-caution"> <a href="#">Caution </a> </li> <li id="incar-structure-optimization-step-1--incar---shape-optimization"> <a href="#">Step 1. INCAR - Shape optimization </a> </li> <li id="incar-structure-optimization-step-2--incar---ion-optimization"> <a href="#">Step 2. INCAR - Ion optimization </a> </li> </ul> <ul class="tab-content" id="7b3045d6-40a3-4b94-8c96-71f9746f22b6" data-name="incar-structure-optimization"> <li class="active"> <div class="language-text highlighter-rouge"><div class="highlight"><pre class="highlight"><code>INCAR tag [ISIF]:
2: Keep lattice constants, and only optimize atomic positions;
3: The lattice constants, atomic positions, and volume are all optimized;
4: The lattice constants and atomic positions are optimized, but the volume does not.
</code></pre></div></div> <blockquote> <h5 id="warning">WARNING</h5> <p class="block-warning">Using <code class="language-plaintext highlighter-rouge">ISIF=3</code> for relaxation, which is unsuitable for 2D systems with vacuum as it may collapse the cell. Recommend using <code class="language-plaintext highlighter-rouge">ISIF=4</code> to keep cell volume constant while relaxing lateral lattice parameters.</p> </blockquote> </li> <li> <div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code>Global Parameters
ISTART <span class="o">=</span>  0            <span class="c"># Read existing wavefunction, if there</span>
ISPIN  <span class="o">=</span>  1            <span class="c"># Non-Spin polarised DFT</span>
ICHARG <span class="o">=</span>  2            <span class="c"># The initial guess charge density is generated by superposition of atomic charge density</span>

LREAL  <span class="o">=</span>  Auto         <span class="c"># Projection operators: False, important for phonon dispersion</span>

ENCUT  <span class="o">=</span>  650          <span class="c"># Cut-off energy for plane wave basis set, in eV</span>
PREC   <span class="o">=</span>  Accurate     <span class="c"># Precision level: Normal or Accurate, set Accurate when perform structure lattice relaxation calculation</span>
LWAVE  <span class="o">=</span> .FALSE.       <span class="c"># Write WAVECAR or not</span>
LCHARG <span class="o">=</span> .FALSE.       <span class="c"># Write CHGCAR or not</span>
<span class="nv">ADDGRID</span><span class="o">=</span> .TRUE.        <span class="c"># Increase grid, helps GGA convergence</span>

Electronic Relaxation
ISMEAR <span class="o">=</span>  <span class="nt">-5</span>           <span class="c"># Gaussian smearing, metals:1</span>
SIGMA  <span class="o">=</span>  0.05         <span class="c"># SIGMA is ignored for the tetrahedron method when ISMEAR = -5</span>
ALGO   <span class="o">=</span>  N            <span class="c"># To specify the electronic minimisation algorithm</span>
NELM   <span class="o">=</span>  120          <span class="c"># Max electronic SCF steps</span>
NELMIN <span class="o">=</span>  6            <span class="c"># Min electronic SCF steps</span>
EDIFF  <span class="o">=</span>  1E-06        <span class="c"># SCF energy convergence, in eV</span>
<span class="c"># GGA  =  PS           # PBEsol exchange-correlation</span>

Ionic Relaxation
NSW    <span class="o">=</span>  120          <span class="c"># Max ionic steps</span>
IBRION <span class="o">=</span>  2            <span class="c"># Algorithm: 0-MD, 1-Quasi-New, 2-CG</span>
ISIF   <span class="o">=</span>  4            <span class="c"># Stress/relaxation: 2-Ions, 3-Shape/Ions/V, 4-Shape/Ions</span>
EDIFFG <span class="o">=</span>  <span class="nt">-0</span>.02        <span class="c"># Ionic convergence, eV/AA</span>
ISYM   <span class="o">=</span>  <span class="nt">-1</span>           <span class="c"># Symmetry: -1=switched off, 0=none, 2=GGA, 3=hybrids</span>
</code></pre></div></div> </li> <li> <div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code>Global Parameters
ISTART <span class="o">=</span>  0            <span class="c"># Read existing wavefunction, if there</span>
ISPIN  <span class="o">=</span>  1            <span class="c"># Non-Spin polarised DFT</span>
ICHARG <span class="o">=</span>  2            <span class="c"># The initial guess charge density is generated by superposition of atomic charge density</span>

LREAL  <span class="o">=</span>  Auto         <span class="c"># Projection operators: False, important for phonon dispersion</span>

ENCUT  <span class="o">=</span>  650          <span class="c"># Cut-off energy for plane wave basis set, in eV</span>
PREC   <span class="o">=</span>  Accurate     <span class="c"># Precision level: Normal or Accurate, set Accurate when perform structure lattice relaxation calculation</span>
LWAVE  <span class="o">=</span> .FALSE.       <span class="c"># Write WAVECAR or not</span>
LCHARG <span class="o">=</span> .FALSE.       <span class="c"># Write CHGCAR or not</span>
<span class="nv">ADDGRID</span><span class="o">=</span> .TRUE.        <span class="c"># Increase grid, helps GGA convergence</span>

Electronic Relaxation
ISMEAR <span class="o">=</span>  <span class="nt">-5</span>           <span class="c"># Gaussian smearing, metals:1</span>
SIGMA  <span class="o">=</span>  0.05         <span class="c"># SIGMA is ignored for the tetrahedron method when ISMEAR = -5</span>
ALGO   <span class="o">=</span>  N            <span class="c"># To specify the electronic minimisation algorithm</span>
NELM   <span class="o">=</span>  120          <span class="c"># Max electronic SCF steps</span>
NELMIN <span class="o">=</span>  6            <span class="c"># Min electronic SCF steps</span>
EDIFF  <span class="o">=</span>  1E-08        <span class="c"># SCF energy convergence, in eV</span>
<span class="c"># GGA  =  PS           # PBEsol exchange-correlation</span>

Ionic Relaxation
NSW    <span class="o">=</span>  120          <span class="c"># Max ionic steps</span>
IBRION <span class="o">=</span>  2            <span class="c"># Algorithm: 0-MD, 1-Quasi-New, 2-CG</span>
ISIF   <span class="o">=</span>  2            <span class="c"># Stress/relaxation: 2-Ions, 3-Shape/Ions/V, 4-Shape/Ions</span>
EDIFFG <span class="o">=</span>  <span class="nt">-1E-04</span>       <span class="c"># Ionic convergence, eV/AA</span>
ISYM   <span class="o">=</span>  <span class="nt">-1</span>           <span class="c"># Symmetry: -1=switched off, 0=none, 2=GGA, 3=hybrids</span>
</code></pre></div></div> </li> </ul> <details><summary>Here is the structure file of MoS₂ with the POSCAR format:</summary> <div class="language-text highlighter-rouge"><div class="highlight"><pre class="highlight"><code>Mo  S
 1.0000000000000000
     3.1600000000000001    0.0000000000000000    0.0000000000000000
    -1.5800000000000001    2.7366402759588260    0.0000000000000000
     0.0000000000000000   -0.0000000000000000   17.2500000000000000
 Mo  S
 1   2
Cartesian
  0.0000000000000000  0.0000000000000000  8.6250000000000000
  1.5799999999999998  0.9122134253196086 10.2500000000000000
  1.5799999999999998  0.9122134253196086  7.0000000000000000
</code></pre></div></div> </details> <details><summary>Here is it after relaxation (CONTCAR file):</summary> <div class="language-text highlighter-rouge"><div class="highlight"><pre class="highlight"><code>Mo  S
  1.000000000000000
     3.1857089607817932    0.0000000218282313    0.0000000024895515
    -1.5928544581578377    2.7589049024719241    0.0000000011539288
     0.0000000310083557    0.0000000002516627   16.9727051455909148
   Mo   S
   1    2
Direct
 -0.0000000007065635 -0.0000000020440497  0.4999999968674809
  0.6666666662068135  0.3333333335809116  0.5920061449599645
  0.6666666678330786  0.3333333351298096  0.4079938581725475

  0.00000000E+00  0.00000000E+00  0.00000000E+00
  0.00000000E+00  0.00000000E+00  0.00000000E+00
  0.00000000E+00  0.00000000E+00  0.00000000E+00
</code></pre></div></div> </details> <p><br/> After completing the full optimization, the CONTCAR file is obtained, allowing us to proceed to the next step.</p> <hr/> <h4 id="2-build-supercell">2. Build supercell</h4> <p>The <a href="https://phonopy.github.io/phonopy/">Phonopy</a> package provides a convenient way for effortlessly expanding the cell.</p> <div class="language-terminal highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="go">phonopy -d --dim='8 8 1’ -c CONTCAR
</span></code></pre></div></div> <p>where the CONTCAR file is the structure after optimization.</p> <p>After that, we will get the following files:</p> <ul> <li><code class="language-plaintext highlighter-rouge">POSCAR-{num}</code>: Displacement files representing structures with slight atomic shifts, numbered by symmetry modes, which will be used to calculate forces for force constants. <em>(for FDM)</em></li> <li><code class="language-plaintext highlighter-rouge">SPOSCAR</code>: Abbreviation for “Supercell POSCAR”. <em>(for DFPT)</em></li> <li><code class="language-plaintext highlighter-rouge">phonopy_disp.yaml</code>: Displacement information file, including direction, amplitude, etc.</li> </ul> <p>The following command is batch processing for FDM calculation preparation:</p> <div class="language-terminal highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="gp">for i in 001 002 003;</span><span class="w"> </span><span class="k">do </span><span class="nb">mkdir</span> <span class="nt">-p</span> <span class="nv">$i</span> <span class="o">&amp;&amp;</span> <span class="nb">mv </span>POSCAR-<span class="nv">$i</span> <span class="nv">$i</span>/POSCAR<span class="p">;</span> <span class="k">done</span>
</code></pre></div></div> <hr/> <h4 id="3-run-vasp">3. Run VASP</h4> <ul id="incar-sp" class="tab" data-tab="0026c762-4c40-484c-863b-7f7362514345" data-name="incar-sp"> <li class="active" id="incar-sp-caution"> <a href="#">Caution </a> </li> <li id="incar-sp-incar---fdm"> <a href="#">INCAR - FDM </a> </li> <li id="incar-sp-incar---dfpt"> <a href="#">INCAR - DFPT </a> </li> </ul> <ul class="tab-content" id="0026c762-4c40-484c-863b-7f7362514345" data-name="incar-sp"> <li class="active"> <p>FDM: Perform single-point calculations in VASP using each displaced <code class="language-plaintext highlighter-rouge">POSCAR-{num}</code> file.</p> <p>DFPT: Perform phonon calculation in VASP using <code class="language-plaintext highlighter-rouge">SPOSCAR</code> file.</p> <p>The <code class="language-plaintext highlighter-rouge">POTCAR</code> and <code class="language-plaintext highlighter-rouge">KPOINTS</code> files can be generated by the <a href="https://vaspkit.com/index.html">VASPKIT</a> tool.</p> <blockquote> <h5 id="warning">WARNING</h5> <p class="block-warning">You may need to adjust some parameters based on your tests and experience! Note: DFPT requires a significant amount of memory.</p> </blockquote> </li> <li> <div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="c"># Global Parameters</span>
ISTART <span class="o">=</span>  0            <span class="c"># Not Read existing wavefunction; if there</span>
ISPIN  <span class="o">=</span>  1            <span class="c"># Non-Spin polarised DFT, Default=1</span>

ICHARG <span class="o">=</span>  2            <span class="c"># The initial guess charge density is generated by superposition of atomic charge density</span>
LREAL  <span class="o">=</span> .FALSE.       <span class="c"># Projection operators: automatic</span>
ENCUT  <span class="o">=</span>  650          <span class="c"># Cut-off energy for plane wave basis set, in eV</span>

LWAVE  <span class="o">=</span> .FALSE.       <span class="c"># Write WAVECAR or not</span>
LCHARG <span class="o">=</span> .FALSE.       <span class="c"># Write CHGCAR or not</span>

PREC     <span class="o">=</span>  Accurate   <span class="c"># Precision level</span>
KGAMMA   <span class="o">=</span> .TRUE.      <span class="c"># GAMMA point</span>
KSPACING <span class="o">=</span> 0.25        <span class="c"># Automatically calculate k-points</span>
ALGO     <span class="o">=</span> Normal

<span class="c"># Static Calculation</span>
NSW    <span class="o">=</span>   1           <span class="c"># Default: NSW = 0</span>
IBRION <span class="o">=</span>  <span class="nt">-1</span>           <span class="c"># Ions are not moved</span>
ISMEAR <span class="o">=</span>  <span class="nt">-5</span>           <span class="c"># gaussian smearing method</span>
SIGMA  <span class="o">=</span>  0.02         <span class="c"># SIGMA is ignored for the tetrahedron method when ISMEAR = -5</span>

EDIFF  <span class="o">=</span>  1E-08        <span class="c"># SCF energy convergence; in eV</span>

NELM   <span class="o">=</span>  150          <span class="c"># Max electronic SCF steps</span>

KPAR   <span class="o">=</span>  4            <span class="c"># make 4 groups, each group working on one set of k-points</span>
NCORE  <span class="o">=</span>  8            <span class="c"># one orbital handled by 4 cores</span>
</code></pre></div></div> </li> <li> <div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="c"># For phonon calculation</span>
PREC    <span class="o">=</span>  Accurate   <span class="c"># Precision level: Normal or Accurate, set Accurate when perform structure lattice relaxation calculation</span>

ENCUT   <span class="o">=</span>  750        <span class="c"># Cut-off energy for plane wave basis set, in eV</span>
NSW     <span class="o">=</span>  1

IBRION  <span class="o">=</span>  8          <span class="c"># IBRION=8: second derivatives, Hessian matrix, and phonon frequencies (perturbation theory use symmetry)</span>
EDIFF   <span class="o">=</span>  1.0e-8     <span class="c"># SCF energy convergence, in eV</span>
EDIFFG  <span class="o">=</span>  <span class="nt">-1E-03</span>     <span class="c"># Ionic convergence; negetive -- force (eV/AA)</span>

IALGO   <span class="o">=</span>  38         <span class="c"># IALGO=38: Blocked-Davidson algorithm (ALGO=N)</span>
ISMEAR  <span class="o">=</span>  0          <span class="c"># Gaussian smearing, metals:1</span>
SIGMA   <span class="o">=</span>  0.02       <span class="c"># Smearing value in eV, metals:0.2)</span>

LREAL   <span class="o">=</span>  .FALSE.    <span class="c"># Projection operators are evaluated in (F:reciprocal space) (T:real space(not recommended)</span>
ADDGRID <span class="o">=</span>  .TRUE.     <span class="c"># Increase grid; helps GGA convergence</span>
LWAVE   <span class="o">=</span>  .FALSE.    <span class="c"># Write WAVECAR file or not</span>
LCHARG  <span class="o">=</span>  .FALSE.    <span class="c"># Write CHGCAR file or not</span>
</code></pre></div></div> </li> </ul> <hr/> <h4 id="4-get-force-constants-info">4. Get force constants info.</h4> <p>After VASP run, you can get the force constants file by :</p> <p>For FDM, get <code class="language-plaintext highlighter-rouge">FORCE_SETS</code>, which contains force and displacement information for perturbed structures:</p> <div class="language-terminal highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="go">phonopy -f 001/vasprun.xml 002/vasprun.xml 003/vasprun.xml
</span></code></pre></div></div> <p>For DFPT, get <code class="language-plaintext highlighter-rouge">FORCE_CONSTANTS</code>:</p> <div class="language-terminal highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="go">phonopy --fc vasprun.xml
</span></code></pre></div></div> <hr/> <h4 id="5-get-phonon-properties">5. Get phonon properties</h4> <p>Prepare <code class="language-plaintext highlighter-rouge">band.conf</code>, and get the phonon spectra, also phonon density of states (DOS).</p> <div class="language-text highlighter-rouge"><div class="highlight"><pre class="highlight"><code>ATOM_NAME = Mo  S
DIM = 8  8  1
BAND= 0.0 0.0 0.0  0.5 0.0 0.0  0.3333 0.3333 0.0  0.0 0.0 0.0
FORCE_CONSTANTS = READ

EIGENVECTORS = .TRUE.
GROUP_VELOCITY = .TRUE.
BAND_POINTS = 2001
BAND_LABELS = $\Gamma$ M K $\Gamma$

MP = 30 30 1
DOS = .TRUE.
SIGMA = 0.1
</code></pre></div></div> <p>Run the following two commands:</p> <div class="language-terminal highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="go">phonopy -p -s band.conf -c POSCAR_uc
</span></code></pre></div></div> <div class="language-terminal highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="gp">phonopy-bandplot --gnuplot &gt;</span><span class="w"> </span>PBAND.dat
</code></pre></div></div> <p>You will get the figure and data in <code class="language-plaintext highlighter-rouge">PBAND.dat</code>:</p> <div class="row mt-3"> <div class="col-sm mt-3 mt-md-0"> <figure> <picture> <source class="responsive-img-srcset" srcset="/assets/img/phonon_MoS2-480.webp 480w,/assets/img/phonon_MoS2-800.webp 800w,/assets/img/phonon_MoS2-1400.webp 1400w," sizes="95vw" type="image/webp"/> <img src="/assets/img/phonon_MoS2.png" class="img-fluid rounded z-depth-1" width="100%" height="auto" data-zoomable="" loading="eager" onerror="this.onerror=null; $('.responsive-img-srcset').remove();"/> </picture> </figure> </div> <div class="col-sm mt-3 mt-md-0"> <figure> <picture> <source class="responsive-img-srcset" srcset="/assets/img/MoS2-480.webp 480w,/assets/img/MoS2-800.webp 800w,/assets/img/MoS2-1400.webp 1400w," sizes="95vw" type="image/webp"/> <img src="/assets/img/MoS2.gif" class="img-fluid rounded z-depth-1" width="100%" height="auto" data-zoomable="" loading="eager" onerror="this.onerror=null; $('.responsive-img-srcset').remove();"/> </picture> </figure> </div> </div> <div class="caption"> The phonon spectra, DOS, and visualization of around 2 THz ZA phonon of monolayer MoS₂, which is obtained by DFPT method. </div> <h4 id="references">References</h4> <p>[1] <a href="https://www.vasp.at/wiki/index.php/Phonons_from_finite_differences">Phonons from finite differences – VASP</a></p> <p>[2] <a href="https://www.vasp.at/wiki/index.php/Phonons_from_density-functional-perturbation_theory">Phonons from density-functional-perturbation theory – VASP</a></p> <p>[3] <a href="https://rehnd.github.io/tutorials/vasp/phonons">Phonon Calculations via VASP – Danny Rehn</a></p> <p>[4] <a href="https://www.zhihu.com/question/297403708">怎么用VASP来计算声子谱？ – 知乎</a></p>]]></content><author><name></name></author><category term="Research"/><category term="Guidance,"/><category term="DFT"/><summary type="html"><![CDATA[Use finite displacement method (FDM) and density functional perturbation theory (DFPT) to get phonon spectrum with the aid of Phonopy.]]></summary></entry><entry><title type="html">Install calorine on conda-MacOS</title><link href="https://xinwuchn.github.io/blog/2024/Calorine-in-conda/" rel="alternate" type="text/html" title="Install calorine on conda-MacOS"/><published>2024-11-22T00:00:00+00:00</published><updated>2024-11-22T00:00:00+00:00</updated><id>https://xinwuchn.github.io/blog/2024/Calorine-in-conda</id><content type="html" xml:base="https://xinwuchn.github.io/blog/2024/Calorine-in-conda/"><![CDATA[<blockquote> <h5 id="update">Update</h5> <p class="block-warning">The bug was fixed in the version 3.0 of calorine. Now you can directly install it by pip!</p> </blockquote> <blockquote> <p>MacOS14.5 + Python 3.10 + conda: The error always shows that it is a problem with C++ compilation, which may be related to the c++ compiler of the MacOS system.</p> </blockquote> <blockquote> <h5 id="the-errors-one-may-encounter">The errors one may encounter</h5> <p>Error 1:</p> <div class="language-text highlighter-rouge"><div class="highlight"><pre class="highlight"><code>File "&lt;string&gt;", line 69, in build_extensions
File "&lt;string&gt;", line 46, in cpp_flag
RuntimeError: Unsupported compiler -- at least C++11 support is needed!
[end of output]
</code></pre></div> </div> <p>Error 2:</p> <div class="language-text highlighter-rouge"><div class="highlight"><pre class="highlight"><code>clang-14: error: invalid argument '-bundle' not allowed with '-dynamiclib'
error: command '/opt/homebrew/opt/llvm@14/bin/clang++' failed with exit code 1
[end of output]
</code></pre></div> </div> </blockquote> <p>Follow the steps:</p> <h6 id="1-modify-setuppy-in-calorine-package"><strong>1. Modify <em>setup.py</em> in calorine package</strong></h6> <p>Download the <a href="https://gitlab.com/materials-modeling/calorine">source code</a> from Gitlab and comment out the following content in setup.py:</p> <div class="row mt-3"> <div class="col-sm mt-3 mt-md-0"> <figure> <picture> <source class="responsive-img-srcset" srcset="/assets/img/calorine_error-480.webp 480w,/assets/img/calorine_error-800.webp 800w,/assets/img/calorine_error-1400.webp 1400w," sizes="95vw" type="image/webp"/> <img src="/assets/img/calorine_error.png" class="img-fluid rounded z-depth-1" width="100%" height="auto" data-zoomable="" loading="eager" onerror="this.onerror=null; $('.responsive-img-srcset').remove();"/> </picture> </figure> </div> </div> <h6 id="2-make-sure-to-use-clang-and-gcc-from-xcodeapp"><strong>2. Make sure to use <em>clang</em> and <em>gcc</em> from Xcode.app</strong></h6> <ul> <li>Put the system’s /usr/bin path at the front of the PATH variable so that the system’s clang will be found first:</li> </ul> <div class="language-shell highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="nb">export </span><span class="nv">PATH</span><span class="o">=</span><span class="s2">"/usr/bin:</span><span class="nv">$PATH</span><span class="s2">"</span>
</code></pre></div></div> <ul> <li>Explicitly set the CC and CXX environment variables to the system’s clang and clang++:</li> </ul> <div class="language-shell highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="nb">export </span><span class="nv">CC</span><span class="o">=</span>/usr/bin/clang
<span class="nb">export </span><span class="nv">CXX</span><span class="o">=</span>/usr/bin/clang++
</code></pre></div></div> <ul> <li>Verify the above settings:</li> </ul> <div class="language-shell highlighter-rouge"><div class="highlight"><pre class="highlight"><code>which clang
/usr/bin/clang
which clang++
/usr/bin/clang++
</code></pre></div></div> <ul> <li>If you want these settings to be automatically applied every time this conda environment is activated, you can add the above command to the conda environment’s activation script. Assuming your conda environment is named For_Research: Create or edit the file ~/opt/anaconda3/envs/For_Research/etc/conda/activate.d/env_vars.sh (you can create these directories manually if the path does not exist):</li> </ul> <div class="language-shell highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="nb">mkdir</span> <span class="nt">-p</span> ~/opt/anaconda3/envs/For_Research/etc/conda/activate.d
nano ~/opt/anaconda3/envs/For_Research/etc/conda/activate.d/env_vars.sh
<span class="c"># After opening it with nano, add the following content:</span>
<span class="c">#!/bin/bash</span>
<span class="nb">export </span><span class="nv">PATH</span><span class="o">=</span><span class="s2">"/usr/bin:</span><span class="nv">$PATH</span><span class="s2">"</span>
<span class="nb">export </span><span class="nv">CC</span><span class="o">=</span>/usr/bin/clang
<span class="nb">export </span><span class="nv">CXX</span><span class="o">=</span>/usr/bin/clang++
</code></pre></div></div> <ul> <li>After saving and closing the file, make sure the script has executable permissions:</li> </ul> <div class="language-shell highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="nb">chmod</span> +x ~/opt/anaconda3/envs/For_Research/etc/conda/activate.d/env_vars.sh
</code></pre></div></div> <ul> <li>Reactivate your conda environment to apply these changes:</li> </ul> <div class="language-shell highlighter-rouge"><div class="highlight"><pre class="highlight"><code>conda deactivate
conda activate For_Research
which clang
which clang++
</code></pre></div></div> <ul> <li>If the above steps are correct, you should see your system’s clang path.</li> </ul> <h6 id="3-compile"><strong>3. Compile</strong></h6> <p>Finally, in the calorine path of the source code, please compile it:</p> <div class="language-shell highlighter-rouge"><div class="highlight"><pre class="highlight"><code>pip <span class="nb">install</span> <span class="nb">.</span>
</code></pre></div></div> <p>Well done!!! 🎉</p> <div class="language-text highlighter-rouge"><div class="highlight"><pre class="highlight"><code>Successfully installed calorine-2.3 numpy-1.26.4
</code></pre></div></div>]]></content><author><name></name></author><category term="Research"/><category term="Guidance"/><summary type="html"><![CDATA[If you have problems installing calorine on MacOS, please see here.]]></summary></entry><entry><title type="html">Install lammps in conda environment</title><link href="https://xinwuchn.github.io/blog/2024/Lammps-conda/" rel="alternate" type="text/html" title="Install lammps in conda environment"/><published>2024-11-22T00:00:00+00:00</published><updated>2024-11-22T00:00:00+00:00</updated><id>https://xinwuchn.github.io/blog/2024/Lammps-conda</id><content type="html" xml:base="https://xinwuchn.github.io/blog/2024/Lammps-conda/"><![CDATA[<h6 id="1-create-a-new-conda-environment-and-enter"><strong>1. Create a new conda environment and enter</strong></h6> <div class="language-shell highlighter-rouge"><div class="highlight"><pre class="highlight"><code>conda create <span class="nt">--name</span> YOUR_NAME <span class="nv">python</span><span class="o">=</span>3
conda activate YOUR_NAME
</code></pre></div></div> <h6 id="2-install-lammps-package-using-pip"><strong>2. Install lammps package using pip</strong></h6> <div class="language-shell highlighter-rouge"><div class="highlight"><pre class="highlight"><code>pip <span class="nb">install </span>lammps
</code></pre></div></div> <p>Note that you must ensure that the pip package exists in the conda environment itself, which can be viewed through <code class="language-plaintext highlighter-rouge">conda list</code>.</p> <h6 id="3-test-your-installation"><strong>3. Test your installation</strong></h6> <p>Prepare a simple lammps in.lj file:</p> <div class="language-text highlighter-rouge"><div class="highlight"><pre class="highlight"><code># LAMMPS input script - in.lj

# Initialization
clear
units lj
dimension 3
atom_style atomic

# Atom definition
lattice fcc 1.0
region box block 0 10 0 10 0 10 units lattice
create_box 1 box
create_atoms 1 box
mass 1 1.0

# Potential
pair_style lj/cut 2.5
pair_coeff 1 1 1.0 1.0 2.5

# Run
run 1000
</code></pre></div></div> <h6 id="4-execute-the-above-inlj-file-in-python-script"><strong>4. Execute the above in.lj file in python script</strong></h6> <div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="kn">from</span> <span class="n">lammps</span> <span class="kn">import</span> <span class="n">lammps</span>
<span class="n">lmp</span> <span class="o">=</span> <span class="nf">lammps</span><span class="p">()</span>
<span class="n">lmp</span><span class="p">.</span><span class="nf">file</span><span class="p">(</span><span class="sh">"</span><span class="s">in.lj</span><span class="sh">"</span><span class="p">)</span>
</code></pre></div></div> <div class="row mt-3"> <div class="col-sm mt-3 mt-md-0"> <figure> <picture> <source class="responsive-img-srcset" srcset="/assets/img/condalammps-480.webp 480w,/assets/img/condalammps-800.webp 800w,/assets/img/condalammps-1400.webp 1400w," sizes="95vw" type="image/webp"/> <img src="/assets/img/condalammps.png" class="img-fluid rounded z-depth-1" width="100%" height="auto" data-zoomable="" loading="eager" onerror="this.onerror=null; $('.responsive-img-srcset').remove();"/> </picture> </figure> </div> </div> <div class="caption"> If you get this result, congratulations! 🎉 🎉 🎉. </div> <h6 id="5-exit-the-test-environment"><strong>5. Exit the test environment</strong></h6> <div class="language-shell highlighter-rouge"><div class="highlight"><pre class="highlight"><code>conda deactivate
</code></pre></div></div>]]></content><author><name></name></author><category term="Research"/><category term="Guidance"/><summary type="html"><![CDATA[Do some simple lammps test in conda environment.]]></summary></entry><entry><title type="html">Run CMD on Win system without entering it</title><link href="https://xinwuchn.github.io/blog/2024/Use-cmd-without-in-Win/" rel="alternate" type="text/html" title="Run CMD on Win system without entering it"/><published>2024-11-22T00:00:00+00:00</published><updated>2024-11-22T00:00:00+00:00</updated><id>https://xinwuchn.github.io/blog/2024/Use-cmd-without-in-Win</id><content type="html" xml:base="https://xinwuchn.github.io/blog/2024/Use-cmd-without-in-Win/"><![CDATA[<blockquote> <p>Applicable scenarios: There is a problem with the computer PIN code, your PIN is not available, click to reset: <code class="language-plaintext highlighter-rouge">msconfig</code> after diagnostic startup.</p> </blockquote> <ol> <li>In the login page, hold on <code class="language-plaintext highlighter-rouge">shift</code> and click <code class="language-plaintext highlighter-rouge">Restart</code> in the lower right corner: automatically enter the PE recovery environment.</li> <li>Troubleshooting -&gt; Advanced Options -&gt; Command Prompt</li> <li>Enter the following two lines of commands one by one:</li> </ol> <div class="language-shell highlighter-rouge"><div class="highlight"><pre class="highlight"><code>move c:<span class="se">\w</span>indows<span class="se">\s</span>ystem32<span class="se">\u</span>tilman.exe c:<span class="se">\</span>
copy c:<span class="se">\w</span>indows<span class="se">\s</span>ystem32<span class="se">\c</span>md.exe c:<span class="se">\w</span>indows<span class="se">\s</span>ystem32<span class="se">\u</span>tilman.exe
</code></pre></div></div> <ol> <li>Close the command prompt window, and after restarting, click the “Easy to Use” button (little person) in the lower right corner to call the command prompt. <blockquote> <p>If you want to solve the problem that the PIN code cannot be used because the startup item fails to load the PIN function, do the following:</p> </blockquote> </li> <li>Enter <code class="language-plaintext highlighter-rouge">msconfig</code> and press <code class="language-plaintext highlighter-rouge">Enter</code> to open the system configuration window. Change the startup selection to “normal startup” or “selective startup”, restart, and then enter the PIN normally to enter the system.</li> <li>Finally, move the file utilman.exe in the root directory of drive C to the directory <code class="language-plaintext highlighter-rouge">C:\Windows\System32\</code>, and replace the file after granting administrator rights. (The following step is for that “Easy to Use” will become CMD or not.)</li> </ol>]]></content><author><name></name></author><category term="Research"/><category term="Guidance"/><summary type="html"><![CDATA[What to do if you forget your login PIN code in Windows system？]]></summary></entry><entry><title type="html">How to install CUDA in Linux?</title><link href="https://xinwuchn.github.io/blog/2024/CUDA-in-Linux/" rel="alternate" type="text/html" title="How to install CUDA in Linux?"/><published>2024-11-21T00:00:00+00:00</published><updated>2024-11-21T00:00:00+00:00</updated><id>https://xinwuchn.github.io/blog/2024/CUDA-in-Linux</id><content type="html" xml:base="https://xinwuchn.github.io/blog/2024/CUDA-in-Linux/"><![CDATA[<blockquote> <p>Install the <em>NVIDIA Driver</em> and <em>CUDA Toolkit</em></p> </blockquote> <blockquote> <h5 id="tip">TIP</h5> <p class="block-tip">Traditionally, the <em>NVIDIA Driver</em> and <em>CUDA Toolkit</em> are installed separately, but you can actually install the <em>CUDA Toolkit</em> directly, and the system will automatically install the <em>NVIDIA Driver</em> that matches its version.</p> </blockquote> <p>Following is the detailed installation steps, with CUDA-10.1 as an example:</p> <h6 id="1-check-if-there-is-a-gpu-that-supports-cuda"><strong>1. Check if there is a GPU that supports CUDA</strong></h6> <div class="language-shell highlighter-rouge"><div class="highlight"><pre class="highlight"><code>lspci | <span class="nb">grep</span> <span class="nt">-i</span> nvidia
</code></pre></div></div> <h6 id="2-install-the-gcc-and-make"><strong>2. Install the <em>gcc</em> and <em>make</em></strong></h6> <div class="language-shell highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="nb">sudo </span>apt update
<span class="nb">sudo </span>apt <span class="nb">install </span>gcc g++ make
<span class="c"># Install the dependent libraries required to run the CUDA example</span>
<span class="nb">sudo </span>apt <span class="nb">install </span>libglul-mesa libxi-dev libxmu-dev libglul-mesa-dev freelut3-dev
</code></pre></div></div> <p>Sometimes, too high versions of <em>gcc</em> and <em>g++</em> may cause GPUMD compilation errors, so you need to download lower versions of gcc and g++ and switch versions (gcc is used as a demonstration below):</p> <ul> <li>Check the current default <em>gcc</em> version: <code class="language-plaintext highlighter-rouge">gcc --version</code></li> <li>Check the installed <em>gcc</em> version: <code class="language-plaintext highlighter-rouge">ls /usr/bin/gcc*</code></li> <li>If there is no suitable version then required, perform a specified installation, such as: <code class="language-plaintext highlighter-rouge">sudo apt-get install gcc-7</code></li> <li>Then perform manual version management: <code class="language-plaintext highlighter-rouge">sudo update-alternatives --config gcc</code>, that’s it.</li> </ul> <h6 id="3-download-cuda-toolkit"><strong>3. Download <em>CUDA Toolkit</em></strong></h6> <p><a href="https://developer.nvidia.com/cuda-downloads">CUDA Toolkit</a></p> <h6 id="4-run-and-install"><strong>4. Run and install</strong></h6> <p>The deb package can automatically install the <em>NVIDIA driver</em> by default (the preferred way).</p> <p>Note: when installing Ubuntu, press <code class="language-plaintext highlighter-rouge">E</code> to pop up GRUB mode, add <code class="language-plaintext highlighter-rouge">nouveau.modeset=0</code> at the end of the <strong>Linux</strong> line, and then press <code class="language-plaintext highlighter-rouge">F10</code> to restart. Before installing Ubuntu dual system, please create a blank partition in advance.</p> <blockquote> <h5 id="warning-about-nouveau-driver-disabling">WARNING: About Nouveau driver disabling</h5> <p>Generally, the deb package to install CUDA will automatically install the <em>Nvidai driver</em>, but there may still be problems in actual testing. This may be caused by the open source driver Nouveau being incompletely disabled.</p> <ul> <li>Open the balcklist: <code class="language-plaintext highlighter-rouge">sudo vim /etc/modprobe.d/blacklist.conf</code></li> <li>Insert the following content at the bottom and save it:</li> </ul> <div class="language-text highlighter-rouge"><div class="highlight"><pre class="highlight"><code>blacklist nouveau
blacklist lbm-nouveau
options nouveau modeset=0
alias nouveau off
alias lbm-nouveau off
</code></pre></div> </div> <ul> <li>Update: <code class="language-plaintext highlighter-rouge">sudo update-initramfs -u</code></li> <li>Check after restart: <code class="language-plaintext highlighter-rouge">lsmod | grep nouveau</code></li> </ul> </blockquote> <h6 id="5-modify-environment-variables"><strong>5. Modify environment variables</strong></h6> <div class="language-shell highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="nb">sudo </span>vim ~/.bashrc
</code></pre></div></div> <p>Add the following environment variables:</p> <div class="language-text highlighter-rouge"><div class="highlight"><pre class="highlight"><code>export PATH=$PATH:/usr/local/cuda-10.1/bin
export LD_LIBRARY_PATH=$LD_LIBRARY_PATH:/usr/local/cuda-10.1/lib64
export CUDA_HOME=$CUDA_HOME:/usr/local/suda-10.1
</code></pre></div></div> <h6 id="6-test"><strong>6. Test</strong></h6> <div class="language-shell highlighter-rouge"><div class="highlight"><pre class="highlight"><code>nvidia-smi
nvcc <span class="nt">--version</span>
</code></pre></div></div> <p>nvcc is a CUDA C/C++ compiler that can directly compile source files (.cu) containing C++ syntax. The syntax is similar to gcc. Its path is located at <code class="language-plaintext highlighter-rouge">/usr/local/cuda-10.1/bin</code></p>]]></content><author><name></name></author><category term="Research"/><category term="Guidance"/><summary type="html"><![CDATA[The guidance is for installing CUDA within Linux system, and the further GPU computing.]]></summary></entry></feed>